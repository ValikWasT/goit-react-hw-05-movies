{"version":3,"file":"static/js/347.eb7b7c76.chunk.js","mappings":"sSAAaA,EAAU,mCCEjBC,EAAQC,EAAAA,IAAAA,EAEDC,EAAW,mCAAG,8FACZF,EACVG,IADU,kEACqDJ,IAC/DK,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,OAAX,IAHgB,mFAAH,qDAMXC,EAAc,mCAAG,WAAMC,GAAN,iFACfT,EACVG,IADU,6CAE6BM,EAF7B,oBAEgDV,EAFhD,oBAIVK,MAAK,SAAAC,GAAC,OAAIA,CAAJ,IALmB,mFAAH,sDAQdK,EAAc,mCAAG,WAAMD,GAAN,iFACfT,EACVG,IADU,6CAE6BM,EAF7B,4BAEwDV,EAFxD,oBAIVK,MAAK,SAAAC,GAAC,OAAIA,CAAJ,IALmB,mFAAH,sDAQdM,EAAY,mCAAG,WAAMF,GAAN,iFACbT,EACVG,IADU,6CAE6BM,EAF7B,4BAEwDV,EAFxD,2BAIVK,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,OAAX,IALiB,mFAAH,sDAQZK,EAAgB,mCAAG,WAAMC,GAAN,iFACjBb,EACVG,IADU,4DAE4CJ,EAF5C,4DAEuGc,IAEjHT,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,OAAX,IALqB,mFAAH,qD,0FChChBO,EAAYC,EAAAA,GAAAA,OAAH,6EAITC,EAAUD,EAAAA,GAAAA,IAAH,6FAKPE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,6G,SCVVI,EAAS,WACpB,OACE,SAACL,EAAD,WACE,UAACE,EAAD,YACE,SAACC,EAAD,CAAYG,GAAG,IAAIC,KAAG,EAAtB,mBAGA,SAACJ,EAAD,CAAYG,GAAG,UAAf,wBAIP,C,sICXYE,EAAYP,EAAAA,GAAAA,IAAH,sBACTQ,EAAcR,EAAAA,GAAAA,MAAH,sBACXS,EAAeT,EAAAA,GAAAA,OAAH,sB,SCDZU,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACjC,OACE,SAACL,EAAD,WACE,SAACC,EAAD,CACEK,KAAK,OACLF,MAAOA,EACPC,SAAU,SAAAE,GAAC,OAAIF,EAASE,EAAEC,OAAOJ,MAAtB,KAIlB,E,kBCJKK,EAAOhB,EAAAA,GAAAA,GAAH,6CAGJiB,EAAOjB,EAAAA,GAAAA,GAAH,sBA8CV,EA5Ce,WAAO,IAAD,EACnB,GAAoCkB,EAAAA,EAAAA,UAAS,MAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCL,EAAAA,EAAAA,UAAS,IAA/C,eAAOM,EAAP,KAAoBC,EAApB,KACMC,EAAW,UAAGJ,EAAalC,IAAI,gBAApB,QAAgC,GAC3CuC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACHH,IAGL7B,EAAAA,EAAAA,IAAiB6B,GAAarC,MAAK,SAAAC,GAAC,OAAI8B,EAAc9B,EAAlB,GACrC,GAAE,CAACoC,IAUJ,OACE,iCACE,SAACtB,EAAA,EAAD,KACA,SAACM,EAAD,CAAWC,MAAOa,EAAaZ,SAXT,SAAAD,GACxBc,EAAed,EAChB,KAUG,SAACF,EAAD,CAAcI,KAAK,SAASiB,QARN,WACxBP,EAAgC,KAAhBC,EAAqB,CAAEO,MAAOP,GAAgB,CAAC,EAChE,EAMG,oBAGCL,IACC,SAACH,EAAD,UACGG,EAAWa,KAAI,SAAAC,GAAK,OACnB,SAAChB,EAAD,WACE,SAAC,KAAD,CAAMZ,GAAE,kBAAa4B,EAAMC,IAAMC,MAAO,CAAEC,KAAMT,GAAhD,SACGM,EAAMI,SAFAJ,EAAMC,GADE,QAW9B,C","sources":["Api/apiKey.js","Api/fetchApi.js","components/Header/HeaderStyled.js","components/Header/Header.js","components/SearchBar/SearchBarStyled.js","components/SearchBar/SearchBar.js","pages/Movies/Movies.js"],"sourcesContent":["export const API_KEY = '88804fe82d069d316bec59240a5ee94b';\n","import { API_KEY } from './apiKey';\n\nconst axios = require('axios').default;\n\nexport const fetchTrends = async () => {\n  return await axios\n    .get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`)\n    .then(r => r.data.results);\n};\n\nexport const fetchMovieById = async movieId => {\n  return await axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    )\n    .then(r => r);\n};\n\nexport const fetchMovieCast = async movieId => {\n  return await axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    )\n    .then(r => r);\n};\n\nexport const fetchReviews = async movieId => {\n  return await axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    )\n    .then(r => r.data.results);\n};\n\nexport const fetchMovieByName = async movieName => {\n  return await axios\n    .get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${movieName}`\n    )\n    .then(r => r.data.results);\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nexport const HeaderBox = styled.header`\n  padding: 15px;\n  border-bottom: 1px solid black;\n`;\nexport const NavList = styled.nav`\n  width: 200px;\n  display: flex;\n  justify-content: space-evenly;\n`;\nexport const StyledLink = styled(NavLink)`\n  color: black;\n  text-decoration: none;\n  &.active {\n    color: orangered;\n  }\n`;\n","import { HeaderBox, NavList, StyledLink } from './HeaderStyled';\nexport const Header = () => {\n  return (\n    <HeaderBox>\n      <NavList>\n        <StyledLink to=\"/\" end>\n          Home\n        </StyledLink>\n        <StyledLink to=\"/movies\">Movies</StyledLink>\n      </NavList>\n    </HeaderBox>\n  );\n};\n","import styled from 'styled-components';\nexport const SearchBox = styled.div``;\nexport const SearchInput = styled.input``;\nexport const SearchButton = styled.button``;\n","import PropTypes from 'prop-types';\nimport { SearchBox, SearchInput } from './SearchBarStyled';\nexport const SearchBar = ({ value, onChange }) => {\n  return (\n    <SearchBox>\n      <SearchInput\n        type=\"text\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n    </SearchBox>\n  );\n};\n\nSearchBar.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { fetchMovieByName } from 'Api/fetchApi';\nimport { Header } from 'components/Header/Header';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { SearchButton } from 'components/SearchBar/SearchBarStyled';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst List = styled.ul`\n  list-style: none;\n`;\nconst Item = styled.li``;\n\nconst Movies = () => {\n  const [movieNames, setMovieNames] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchValue, setSearchValue] = useState('');\n  const searchQuery = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    fetchMovieByName(searchQuery).then(r => setMovieNames(r));\n  }, [searchQuery]);\n\n  const changeSearchValue = value => {\n    setSearchValue(value);\n  };\n\n  const handleClickButton = () => {\n    setSearchParams(searchValue !== '' ? { query: searchValue } : {});\n  };\n\n  return (\n    <>\n      <Header />\n      <SearchBar value={searchValue} onChange={changeSearchValue} />\n      <SearchButton type=\"button\" onClick={handleClickButton}>\n        Search\n      </SearchButton>\n      {movieNames && (\n        <List>\n          {movieNames.map(movie => (\n            <Item key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </Item>\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","axios","require","fetchTrends","get","then","r","data","results","fetchMovieById","movieId","fetchMovieCast","fetchReviews","fetchMovieByName","movieName","HeaderBox","styled","NavList","StyledLink","NavLink","Header","to","end","SearchBox","SearchInput","SearchButton","SearchBar","value","onChange","type","e","target","List","Item","useState","movieNames","setMovieNames","useSearchParams","searchParams","setSearchParams","searchValue","setSearchValue","searchQuery","location","useLocation","useEffect","onClick","query","map","movie","id","state","from","title"],"sourceRoot":""}