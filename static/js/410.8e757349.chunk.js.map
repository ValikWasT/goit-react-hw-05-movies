{"version":3,"file":"static/js/410.8e757349.chunk.js","mappings":"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","sources":["Api/apiKey.js","Api/fetchApi.js","components/MovieDetails/MovieDetailsStyled.js","components/MovieDetails/MovieDetails.js"],"sourcesContent":["export const API_KEY = '88804fe82d069d316bec59240a5ee94b';\n","import { API_KEY } from './apiKey';\n\nconst axios = require('axios').default;\n\nexport const fetchTrends = async () => {\n  return await axios\n    .get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`)\n    .then(r => r.data.results);\n};\n\nexport const fetchMovieById = async movieId => {\n  return await axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    )\n    .then(r => r);\n};\n\nexport const fetchMovieCast = async movieId => {\n  return await axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    )\n    .then(r => r);\n};\n\nexport const fetchReviews = async movieId => {\n  return await axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    )\n    .then(r => r.data.results);\n};\n\nexport const fetchMovieByName = async movieName => {\n  return await axios\n    .get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${movieName}`\n    )\n    .then(r => r.data.results);\n};\n","import styled from 'styled-components';\nexport const MainInfoBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 500px;\n  margin: 0 auto;\n`;\nexport const AdditionalBox = styled.div`\n  margin: 0 auto;\n  width: 500px;\n`;\nexport const MovieImg = styled.img`\n  width: 240px;\n`;\nexport const MovieName = styled.p`\n  font-size: 24px;\n  font-weight: 700;\n`;\nexport const MovieRating = styled.p``;\nexport const MovieInfoTitle = styled.p`\n  font-weight: 700;\n`;\nexport const MovieInfo = styled.p``;\nexport const AddInfoList = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  list-style: none;\n  padding: 0;\n`;\nexport const AddInfoItem = styled.li``;\n","import { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { fetchMovieById } from 'Api/fetchApi';\nimport {\n  MovieImg,\n  MainInfoBox,\n  AdditionalBox,\n  MovieName,\n  MovieRating,\n  MovieInfo,\n  MovieInfoTitle,\n  AddInfoList,\n  AddInfoItem,\n} from './MovieDetailsStyled';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst Link = styled(NavLink)`\n  font-size: 24px;\n  text-decoration: none;\n  color: orangered;\n`;\nconst LinkBox = styled.div`\n  text-align: center;\n  width: 500px;\n  margin: 0 auto;\n  margin-top: 15px;\n  margin-bottom: 15px;\n`;\nconst InfoContainer = styled.div`\n  width: 240px;\n`;\n\nconst MovieDetails = () => {\n  const [movieInfo, setmMovieInfo] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchMovieById(movieId).then(r => setmMovieInfo(r));\n  }, [movieId]);\n\n  if (!movieInfo) {\n    return;\n  }\n\n  const { poster_path, title, vote_average, overview, genres } = movieInfo.data;\n  const genreNames = genres.map(genre => genre.name).join(', ');\n  const BackLinkHref = location.state?.from ?? '/';\n\n  return (\n    <>\n      <LinkBox>\n        <Link to={BackLinkHref}>Back</Link>\n      </LinkBox>\n\n      <MainInfoBox>\n        <MovieImg src={`https://image.tmdb.org/t/p/w300/${poster_path}`} />\n        <InfoContainer>\n          <MovieName>{title}</MovieName>\n          <MovieRating>Rating: {vote_average}</MovieRating>\n          <MovieInfoTitle>Overview</MovieInfoTitle>\n          <MovieInfo>{overview}</MovieInfo>\n          <MovieInfoTitle>Genres</MovieInfoTitle>\n          <MovieInfo>{genreNames}</MovieInfo>\n        </InfoContainer>\n      </MainInfoBox>\n      <AdditionalBox>\n        <AddInfoList>\n          <AddInfoItem>\n            <Link to=\"cast\" state={{ from: location.state.from }}>\n              Cast\n            </Link>\n          </AddInfoItem>\n          <AddInfoItem>\n            <Link to=\"reviews\" state={{ from: location.state.from }}>\n              Reviews\n            </Link>\n          </AddInfoItem>\n        </AddInfoList>\n        <Suspense>\n          <Outlet />\n        </Suspense>\n      </AdditionalBox>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","axios","require","fetchTrends","get","then","r","data","results","fetchMovieById","movieId","fetchMovieCast","fetchReviews","fetchMovieByName","movieName","MainInfoBox","styled","AdditionalBox","MovieImg","MovieName","MovieRating","MovieInfoTitle","MovieInfo","AddInfoList","AddInfoItem","Link","NavLink","LinkBox","InfoContainer","useState","movieInfo","setmMovieInfo","useParams","location","useLocation","useEffect","poster_path","title","vote_average","overview","genreNames","genres","map","genre","name","join","BackLinkHref","state","from","to","src","Suspense"],"sourceRoot":""}