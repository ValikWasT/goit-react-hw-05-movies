{"version":3,"file":"static/js/761.a073a982.chunk.js","mappings":"sSAAaA,EAAU,mCCEjBC,EAAQC,EAAAA,IAAAA,EAEDC,EAAW,mCAAG,8FACZF,EACVG,IADU,kEACqDJ,IAC/DK,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,OAAX,IAHgB,mFAAH,qDAMXC,EAAc,mCAAG,WAAMC,GAAN,iFACfT,EACVG,IADU,6CAE6BM,EAF7B,oBAEgDV,EAFhD,oBAIVK,MAAK,SAAAC,GAAC,OAAIA,CAAJ,IALmB,mFAAH,sDAQdK,EAAc,mCAAG,WAAMD,GAAN,iFACfT,EACVG,IADU,6CAE6BM,EAF7B,4BAEwDV,EAFxD,oBAIVK,MAAK,SAAAC,GAAC,OAAIA,CAAJ,IALmB,mFAAH,sDAQdM,EAAY,mCAAG,WAAMF,GAAN,iFACbT,EACVG,IADU,6CAE6BM,EAF7B,4BAEwDV,EAFxD,2BAIVK,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,OAAX,IALiB,mFAAH,sDAQZK,EAAgB,mCAAG,WAAMC,GAAN,iFACjBb,EACVG,IADU,4DAE4CJ,EAF5C,4DAEuGc,IAEjHT,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,OAAX,IALqB,mFAAH,qD,4GC7BvBO,EAAYC,EAAAA,GAAAA,IAAH,sBACTC,EAAaD,EAAAA,GAAAA,GAAH,4DAIVE,EAAaF,EAAAA,GAAAA,GAAH,sBACVG,EAAaH,EAAAA,GAAAA,EAAH,oEAIVI,EAAeJ,EAAAA,GAAAA,EAAH,sBACZK,EAAcL,EAAAA,GAAAA,EAAH,wFAmCjB,UA7BgB,WACd,OAA8BM,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQd,GAAYe,EAAAA,EAAAA,MAAZf,QAMR,IAJAgB,EAAAA,EAAAA,YAAU,YACRd,EAAAA,EAAAA,IAAaF,GAASL,MAAK,SAAAC,GAAC,OAAIkB,EAAWlB,EAAf,GAC7B,GAAE,CAACI,IAECa,EAIL,OAAuB,IAAnBA,EAAQI,QACH,SAACN,EAAD,wDAIP,SAACN,EAAD,WACE,SAACE,EAAD,UACGM,EAAQK,KAAI,SAAAC,GAAM,OACjB,UAACX,EAAD,YACE,SAACC,EAAD,UAAaU,EAAOC,UACpB,SAACV,EAAD,UAAeS,EAAOE,YAFPF,EAAOG,GADP,OAS1B,C","sources":["Api/apiKey.js","Api/fetchApi.js","pages/Reviews/Reviews.js"],"sourcesContent":["export const API_KEY = '88804fe82d069d316bec59240a5ee94b';\n","import { API_KEY } from './apiKey';\n\nconst axios = require('axios').default;\n\nexport const fetchTrends = async () => {\n  return await axios\n    .get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`)\n    .then(r => r.data.results);\n};\n\nexport const fetchMovieById = async movieId => {\n  return await axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    )\n    .then(r => r);\n};\n\nexport const fetchMovieCast = async movieId => {\n  return await axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    )\n    .then(r => r);\n};\n\nexport const fetchReviews = async movieId => {\n  return await axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    )\n    .then(r => r.data.results);\n};\n\nexport const fetchMovieByName = async movieName => {\n  return await axios\n    .get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${movieName}`\n    )\n    .then(r => r.data.results);\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'Api/fetchApi';\nimport styled from 'styled-components';\n\nconst ReviewBox = styled.div``;\nconst ReviewList = styled.ul`\n  padding: 0;\n  list-style: none;\n`;\nconst ReviewItem = styled.li``;\nconst AuthorName = styled.p`\n  text-align: center;\n  font-weight: 700;\n`;\nconst AuthorReview = styled.p``;\nconst ReviewError = styled.p`\n  text-align: center;\n  font-weight: 700;\n  font-size: 24px;\n`;\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchReviews(movieId).then(r => setReviews(r));\n  }, [movieId]);\n\n  if (!reviews) {\n    return;\n  }\n\n  if (reviews.length === 0) {\n    return <ReviewError>We don't have an reviews for this movie.</ReviewError>;\n  }\n\n  return (\n    <ReviewBox>\n      <ReviewList>\n        {reviews.map(review => (\n          <ReviewItem key={review.id}>\n            <AuthorName>{review.author}</AuthorName>\n            <AuthorReview>{review.content}</AuthorReview>\n          </ReviewItem>\n        ))}\n      </ReviewList>\n    </ReviewBox>\n  );\n};\nexport default Reviews;\n"],"names":["API_KEY","axios","require","fetchTrends","get","then","r","data","results","fetchMovieById","movieId","fetchMovieCast","fetchReviews","fetchMovieByName","movieName","ReviewBox","styled","ReviewList","ReviewItem","AuthorName","AuthorReview","ReviewError","useState","reviews","setReviews","useParams","useEffect","length","map","review","author","content","id"],"sourceRoot":""}