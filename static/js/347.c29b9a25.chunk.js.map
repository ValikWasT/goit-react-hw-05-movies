{"version":3,"file":"static/js/347.c29b9a25.chunk.js","mappings":"sSAAaA,EAAU,mCCEjBC,EAAQC,EAAAA,IAAAA,EAEDC,EAAW,mCAAG,8FACZF,EACVG,IADU,kEACqDJ,IAC/DK,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,OAAX,IAHgB,mFAAH,qDAMXC,EAAc,mCAAG,WAAMC,GAAN,iFACfT,EACVG,IADU,6CAE6BM,EAF7B,oBAEgDV,EAFhD,oBAIVK,MAAK,SAAAC,GAAC,OAAIA,CAAJ,IALmB,mFAAH,sDAQdK,EAAc,mCAAG,WAAMD,GAAN,iFACfT,EACVG,IADU,6CAE6BM,EAF7B,4BAEwDV,EAFxD,oBAIVK,MAAK,SAAAC,GAAC,OAAIA,CAAJ,IALmB,mFAAH,sDAQdM,EAAY,mCAAG,WAAMF,GAAN,iFACbT,EACVG,IADU,6CAE6BM,EAF7B,4BAEwDV,EAFxD,2BAIVK,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,OAAX,IALiB,mFAAH,sDAQZK,EAAgB,mCAAG,WAAMC,GAAN,iFACjBb,EACVG,IADU,4DAE4CJ,EAF5C,4DAEuGc,IAEjHT,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,OAAX,IALqB,mFAAH,qD,4IC/BhBO,EAAOC,EAAAA,GAAAA,GAAH,4DAIJC,EAAOD,EAAAA,GAAAA,GAAH,gDAGJE,GAAOF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,sF,kICTJI,EAAYJ,EAAAA,GAAAA,IAAH,sBACTK,EAAcL,EAAAA,GAAAA,MAAH,uIAOXM,EAAeN,EAAAA,GAAAA,OAAH,mH,SCPZO,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACjC,OACE,SAACL,EAAD,WACE,SAACC,EAAD,CACEK,KAAK,OACLF,MAAOA,EACPC,SAAU,SAAAE,GAAC,OAAIF,EAASE,EAAEC,OAAOJ,MAAtB,KAIlB,E,2BCJKT,EAAOC,EAAAA,GAAAA,GAAH,4DAIJC,EAAOD,EAAAA,GAAAA,GAAH,gDAGJa,EAAiBb,EAAAA,GAAAA,IAAH,sIAOdc,EAAed,EAAAA,GAAAA,IAAH,mFAqDlB,EA/Ce,WAAO,IAAD,EACnB,GAAoCe,EAAAA,EAAAA,UAAS,MAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAa/B,IAAI,gBAApB,QAAgC,GACjD,GAAsC2B,EAAAA,EAAAA,UAAQ,OAACM,QAAD,IAACA,EAAAA,EAAe,IAA9D,eAAOC,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACHL,IAGLxB,EAAAA,EAAAA,IAAiBwB,GAAahC,MAAK,SAAAC,GAAC,OAAI2B,EAAc3B,EAAlB,GACrC,GAAE,CAAC+B,IAUJ,OACE,iCACE,UAACR,EAAD,YACE,SAACN,EAAD,CAAWC,MAAOc,EAAab,SAXX,SAAAD,GACxBe,EAAef,EAChB,KAUK,SAACF,EAAD,CAAcI,KAAK,SAASiB,QARR,WACxBP,EAAgC,KAAhBE,EAAqB,CAAEM,MAAON,GAAgB,CAAC,EAChE,EAMK,wBAIF,SAACR,EAAD,UACGE,IACC,SAACjB,EAAD,UACGiB,EAAWa,KAAI,SAAAC,GAAK,OACnB,SAAC7B,EAAD,WACE,SAAC,KAAD,CAAM8B,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMV,GAAhD,SACGM,EAAMK,SAFAL,EAAME,GADE,UAYhC,C","sources":["Api/apiKey.js","Api/fetchApi.js","components/TrendsList/TrendsListStyled.js","components/SearchBar/SearchBarStyled.js","components/SearchBar/SearchBar.js","pages/Movies/Movies.js"],"sourcesContent":["export const API_KEY = '88804fe82d069d316bec59240a5ee94b';\n","import { API_KEY } from './apiKey';\n\nconst axios = require('axios').default;\n\nexport const fetchTrends = async () => {\n  return await axios\n    .get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`)\n    .then(r => r.data.results);\n};\n\nexport const fetchMovieById = async movieId => {\n  return await axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    )\n    .then(r => r);\n};\n\nexport const fetchMovieCast = async movieId => {\n  return await axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    )\n    .then(r => r);\n};\n\nexport const fetchReviews = async movieId => {\n  return await axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    )\n    .then(r => r.data.results);\n};\n\nexport const fetchMovieByName = async movieName => {\n  return await axios\n    .get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${movieName}`\n    )\n    .then(r => r.data.results);\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\nexport const Item = styled.li`\n  margin-bottom: 10px;\n`;\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  font-size: 24px;\n`;\n","import styled from 'styled-components';\nexport const SearchBox = styled.div``;\nexport const SearchInput = styled.input`\n  border: 1px solid black;\n  padding: 0;\n  height: 30px;\n  width: 300px;\n  background-color: lightyellow;\n`;\nexport const SearchButton = styled.button`\n  border: 1px solid black;\n  background-color: orange;\n  height: 32px;\n  width: 100px;\n`;\n","import PropTypes from 'prop-types';\nimport { SearchBox, SearchInput } from './SearchBarStyled';\nexport const SearchBar = ({ value, onChange }) => {\n  return (\n    <SearchBox>\n      <SearchInput\n        type=\"text\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n    </SearchBox>\n  );\n};\n\nSearchBar.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { fetchMovieByName } from 'Api/fetchApi';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { SearchButton } from 'components/SearchBar/SearchBarStyled';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Link } from '../../components/TrendsList/TrendsListStyled';\n\nconst List = styled.ul`\n  padding: 0;\n  list-style: none;\n`;\nconst Item = styled.li`\n  margin-bottom: 10px;\n`;\nconst SearchInputBox = styled.div`\n  margin: 0 auto;\n  margin-top: 20px;\n  width: 500px;\n  display: flex;\n  justify-content: space-between;\n`;\nconst MovieListBox = styled.div`\n  margin: 0 auto;\n  width: 500px;\n  text-align: center;\n`;\n\nconst Movies = () => {\n  const [movieNames, setMovieNames] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n  const [searchValue, setSearchValue] = useState(searchQuery ?? '');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    fetchMovieByName(searchQuery).then(r => setMovieNames(r));\n  }, [searchQuery]);\n\n  const changeSearchValue = value => {\n    setSearchValue(value);\n  };\n\n  const handleClickButton = () => {\n    setSearchParams(searchValue !== '' ? { query: searchValue } : {});\n  };\n\n  return (\n    <>\n      <SearchInputBox>\n        <SearchBar value={searchValue} onChange={changeSearchValue} />\n        <SearchButton type=\"button\" onClick={handleClickButton}>\n          Search\n        </SearchButton>\n      </SearchInputBox>\n      <MovieListBox>\n        {movieNames && (\n          <List>\n            {movieNames.map(movie => (\n              <Item key={movie.id}>\n                <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                  {movie.title}\n                </Link>\n              </Item>\n            ))}\n          </List>\n        )}\n      </MovieListBox>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","axios","require","fetchTrends","get","then","r","data","results","fetchMovieById","movieId","fetchMovieCast","fetchReviews","fetchMovieByName","movieName","List","styled","Item","Link","NavLink","SearchBox","SearchInput","SearchButton","SearchBar","value","onChange","type","e","target","SearchInputBox","MovieListBox","useState","movieNames","setMovieNames","useSearchParams","searchParams","setSearchParams","searchQuery","searchValue","setSearchValue","location","useLocation","useEffect","onClick","query","map","movie","to","id","state","from","title"],"sourceRoot":""}